@charset "UTF-8";
//需要兼容IE9以下的需要在文档最上声明$LegacyIE: true
$LegacyIE: false !default;
//半透明背景色效果, 前面参数颜色, 后面参数透明度
//示例：@include bgAlpha(#f00, .5)
@mixin bgAlpha($color, $alpha) {
    $rgba: rgba($color, $alpha);
    background-color: $rgba;
    @if ($LegacyIE) {
        $ie-hex-str: ie-hex-str($rgba);
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$ie-hex-str}, endColorstr=#{$ie-hex-str});
        @at-root :root & {
            filter: none;
        }
    }
}

%justify {
    text-align: justify;
    text-justify: distribute-all-lines;
    text-align-last: justify;
}

//文本和inline-block的两端对齐
//示例：@include justify
//如果要兼容IE6，7，请保证父级是块级元素
@mixin justify {
    @extend %justify;
}

//清除浮动
//示例：@include clear
%clear {
    @if ($LegacyIE) {
        *zoom: 1;
    }
    &:after {
        height: 0;
        visibility: hidden;
        overflow: hidden;
        content: '';
        display: block;
        clear: both;
    }
}

@mixin clear {
    @extend %clear;
}

//单/多行截断，第一个参数为要截断的行数，需要设置元素为inline-block时需要将第二个参数设置为true
//示例：@include line-clip(1, true)，inline-block元素的单行截断
@mixin line-clip($line, $inline: 0) {
    overflow: hidden;
    text-overflow: ellipsis;
    word-wrap: normal;
    @if ($line == 1) {
        white-space: nowrap;
        @if ($inline == 1) {
            // 行内格式化上下文可能需要用 vertical-align 来调整
            display: inline-block;
            @if ($LegacyIE) {
                *display: inline;
                *zoom: 1;
            }
        }
        @else {
            display: block;
        }
    }
    @else {
        -webkit-line-clamp: $line;
        -webkit-box-orient: vertical;
        @if ($inline == 1) {
            display: inline-block;
            @if ($LegacyIE) {
                *display: inline;
                *zoom: 1;
            }
            display: -webkit-inline-box;
        }
        @else {
            display: block;
            display: -webkit-box;
        }
    }
}

//高清图片自动加image-set
//示例：@include image-set(../images/logo.png)
@mixin image-set($url) {
    $at: str-index($url, '@');
    $prefix: null;
    $suffix: null;
    $retina: 2;
    @if ($at) {
        $prefix: str-slice($url, 0, $at - 1);
        $suffix: str-slice($url, $at + 3);
    }
    @else {
        $dot: 0;
        $string: $url;
        @while ($string) {
            $index: str-index($string, '.');
            @if ($index) {
                $dot: $dot + $index;
                $string: str-slice($string, $index + 1);
            }
            @else {
                $string: null;
            }
        }
        $prefix: str-slice($url, 0, $dot - 1);
        $suffix: str-slice($url, $dot);
    }
    $return: 'image-set(';
    $start: 'url(' + $prefix;
    @for $i from 1 through $retina {
        $end: $suffix + ') ' + $i + 'x, ';
        @if (1 !=$i) {
            $end: '@' + $i + 'x' + $end;
        }
        $return: $return + $start + $end;
    }
    $return: str-slice($return, 0, str-length($return) - 2);
    $return: $return + ')';
    background-image: url(unquote($url));
    background-image: unquote($return);
}

//模拟物理1px，第一个参数为边框色，后面参数对应上右下左四个边框方向，1为显示，0为隐藏
//示例：@include background-border(#f00, 1, 0, 0, 0) 为1px的红色上边框
//支持四个方向边框不同颜色，只要把对应方向的数字改为颜色即可，如@include background-border(#f00, 1, 0, #000, 0)
@mixin background-border($color, $top: 1, $right: 1, $bottom: 1, $left: 1) {
    $image: ();
    $position: ();
    $size: ();
    $top-color: if('color'==type-of($top), $top, if($top > 0, $color, null));
    $right-color: if('color'==type-of($right), $right, if($right > 0, $color, null));
    $bottom-color: if('color'==type-of($bottom), $bottom, if($bottom > 0, $color, null));
    $left-color: if('color'==type-of($left), $left, if($left > 0, $color, null));
    @if ($top-color) {
        $image: append($image, 'linear-gradient(to bottom, ' + $top-color + ' 50%, transparent 0%)');
        $position: append($position, 'top');
        $size: append($size, '100% 1px');
    }
    @if ($right-color) {
        $image: append($image, 'linear-gradient(to left, ' + $right-color + ' 50%, transparent 0%)');
        $position: append($position, 'right');
        $size: append($size, '1px 100%');
    }
    @if ($bottom-color) {
        $image: append($image, 'linear-gradient(to top, ' + $bottom-color + ' 50%, transparent 0%)');
        $position: append($position, 'bottom');
        $size: append($size, '100% 1px');
    }
    @if ($left-color) {
        $image: append($image, 'linear-gradient(to right, ' + $left-color + ' 50%, transparent 0%)');
        $position: append($position, 'left');
        $size: append($size, '1px 100%');
    }
    $length: length($image);
    $image-str: '';
    $position-str: '';
    $size-str: '';
    @for $i from 1 through $length {
        @if (1 !=$i) {
            $image-str: $image-str + ', ';
            $position-str: $position-str + ', ';
            $size-str: $size-str + ', ';
        }
        $image-str: $image-str + nth($image,
        $i);
        $position-str: $position-str + nth($position,
        $i);
        $size-str: $size-str + nth($size,
        $i);
    }
    background: {
        image: unquote($image-str);
        position: unquote($position-str);
        size: unquote($size-str);
        repeat: no-repeat;
    }
}

%image-center-box {
    position: relative;
    overflow: hidden;
    *text-align: center;
    img {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        margin: auto;
        @if ($LegacyIE) {
            *position: static;
            *vertical-align:middle;
        }
    }
}

//图片水平垂直居中，注意要应用在图片容器上，容器中的图片大小规则需要自己按照实际需求
//示例：@include image-center-box(500px, 500px)
@mixin image-center-box($width, $height) {
    @extend %image-center-box;
    width: $width;
    height: $height;
    @if ($LegacyIE) {
        *line-height: $height;
        *font-size: floor($height / 1.14);
    }
}

%horizontal-center {
    position: absolute;
    left: 50%;
    @if ($LegacyIE) {
        margin-left: -50%;
    }
    @else {
        transform: translateX(-50%);
    }
}

%vertical-center {
    position: absolute;
    top: 50%;
    @if ($LegacyIE) {
        margin-top: -50%;
    }
    @else {
        transform: translateY(-50%);
    }
}

%horizontal-vertical-center {
    position: absolute;
    top: 50%;
    left: 50%;
    @if ($LegacyIE) {
        margin-top: -50%;
        margin-left: -50%;
    }
    @else {
        transform: translate(-50%, -50%);
    }
}
//参数'x'表示水平居中，'y'为垂直居中，默认留空为水平垂直居中
//如果需要兼容旧版IE，则必须指定元素高宽
//水平居中示例：@include position-center('x')
@mixin position-center($orientation: null) {
    @if ($orientation == 'x') {
        @extend %horizontal-center;
    }
    @else if ($orientation == 'y') {
        @extend %vertical-center;
    }
    @else {
        @extend %horizontal-vertical-center;
    }
}
